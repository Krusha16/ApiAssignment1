"use strict";function _createForOfIteratorHelper(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,c=!0,s=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return c=e.done,e},e:function(e){s=!0,a=e},f:function(){try{c||null==n.return||n.return()}finally{if(s)throw a}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var streets=document.querySelector(".streets"),tbody=document.querySelector("tbody"),streetName=document.getElementById("street-name"),input=document.querySelector(".input");function getStreets(e){return fetch("https://api.winnipegtransit.com/v3/streets.json?api-key=qhJFl4WLev9xuoa7gwJK&name=".concat(e)).then((function(e){return e.json()}))}function getStops(e){return fetch("https://api.winnipegtransit.com/v3/stops.json?api-key=qhJFl4WLev9xuoa7gwJK&street=".concat(e)).then((function(e){return e.json()}))}function getStopSchedule(e){return fetch("https://api.winnipegtransit.com/v3/stops/".concat(e,"/schedule.json?api-key=qhJFl4WLev9xuoa7gwJK&max-results-per-route=2")).then((function(e){return e.json()}))}function search(e){"Enter"===e.key&&(e.preventDefault(),""!==input.value&&(streets.innerHTML="",getStreets(input.value).then((function(e){if(0===e.streets.length)streets.insertAdjacentHTML("beforeend","No Streets found");else{var t,n=_createForOfIteratorHelper(e.streets);try{for(n.s();!(t=n.n()).done;){insertHTMLForStreets(t.value)}}catch(e){n.e(e)}finally{n.f()}handleClickOnEachStreet()}})),input.value=""))}function insertHTMLForStreets(e){streets.insertAdjacentHTML("beforeend",'<a href="#" datakey='.concat(e.key,">\n      ").concat(e.name,"\n    </a>"))}function handleClickOnEachStreet(){document.querySelectorAll("a").forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),tbody.innerHTML="",streetName.innerHTML="",getStopsForEachStreet(e.target.getAttribute("datakey"))}))})),tbody.innerHTML=""}function getStopsForEachStreet(e){getStops(e).then((function(e){findNext2BusesForEachRoute(e.stops.map((function(e){return getStopSchedule(e.key)})))}))}function findNext2BusesForEachRoute(e){Promise.all(e).then((function(e){var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var r,o=t.value,a=_createForOfIteratorHelper(o["stop-schedule"]["route-schedules"]);try{var c=function(){var e=r.value,t=o["stop-schedule"].stop.street.name,n=o["stop-schedule"].stop["cross-street"].name,a=o["stop-schedule"].stop.direction,c=e.route.number;streetName.innerHTML="Displaying results for ".concat(t),e["scheduled-stops"].forEach((function(e){var r=new Date(e.times.arrival.estimated).toLocaleString("en-US",{hour:"numeric",minute:"numeric",hour12:!0});insertHTMLForEachStops(t,a,n,c,r)}))};for(a.s();!(r=a.n()).done;)c()}catch(e){a.e(e)}finally{a.f()}}}catch(e){n.e(e)}finally{n.f()}}))}function insertHTMLForEachStops(e,t,n,r,o){tbody.insertAdjacentHTML("beforeend","<tr>\n  <td>".concat(e,"</td>\n  <td>").concat(n,"</td>\n  <td>").concat(t,"</td>\n  <td>").concat(r,"</td>\n  <td>").concat(o,"</td>\n  </tr>\n  "))}input.addEventListener("keypress",search);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
